// <auto-generated />
using System;
using MarketList_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MarketList_Data.Migrations
{
    [DbContext(typeof(MarketListContext))]
    [Migration("20221012202805_atualizarUsuario2")]
    partial class atualizarUsuario2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MarketList_Model.AgrupadorListas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("NIdStatus")
                        .HasColumnType("integer");

                    b.Property<int>("NIdUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("SDescricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NIdStatus");

                    b.HasIndex("NIdUsuario");

                    b.ToTable("AgrupadorListas");
                });

            modelBuilder.Entity("MarketList_Model.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("SDescricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("MarketList_Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("NIdSessao")
                        .HasColumnType("integer");

                    b.Property<int>("NIdUnidade")
                        .HasColumnType("integer");

                    b.Property<string>("SNome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("SUnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.HasIndex("NIdSessao");

                    b.HasIndex("NIdUnidade");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("MarketList_Model.ItemLista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("BAtivo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("NIdItem")
                        .HasColumnType("integer");

                    b.Property<int>("NIdLista")
                        .HasColumnType("integer");

                    b.Property<int>("NIdStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("NIdUsuarioComprador")
                        .HasColumnType("integer");

                    b.Property<int>("NIdUsuarioSolicitante")
                        .HasColumnType("integer");

                    b.Property<decimal>("NQuantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("NIdItem");

                    b.HasIndex("NIdLista");

                    b.HasIndex("NIdStatus");

                    b.HasIndex("NIdUsuarioComprador");

                    b.HasIndex("NIdUsuarioSolicitante");

                    b.ToTable("ItemLista");
                });

            modelBuilder.Entity("MarketList_Model.Lista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("BAtivo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("NIdUnidade")
                        .HasColumnType("integer");

                    b.Property<int>("NIdUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("SNome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NIdUnidade");

                    b.HasIndex("NIdUsuario");

                    b.ToTable("Lista");
                });

            modelBuilder.Entity("MarketList_Model.ListaAgrupadorListas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("NIdAgrupadorListas")
                        .HasColumnType("integer");

                    b.Property<int>("NIdLista")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NIdAgrupadorListas");

                    b.HasIndex("NIdLista");

                    b.ToTable("ListaAgrupadorListas");
                });

            modelBuilder.Entity("MarketList_Model.PerfilUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("SDescricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PerfilUsuario");
                });

            modelBuilder.Entity("MarketList_Model.Sessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("SNome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sessao");
                });

            modelBuilder.Entity("MarketList_Model.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("NIdArea")
                        .HasColumnType("integer");

                    b.Property<string>("SDescricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NIdArea");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("MarketList_Model.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("SNome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("MarketList_Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("NIdPerfilUsuario")
                        .HasColumnType("integer");

                    b.Property<int>("NIdStatus")
                        .HasColumnType("integer");

                    b.Property<string>("SEmail")
                        .HasColumnType("text");

                    b.Property<string>("SSenha")
                        .HasColumnType("text");

                    b.Property<string>("SUsuario")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NIdPerfilUsuario");

                    b.HasIndex("NIdStatus");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MarketList_Model.UsuarioUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("NIdUnidade")
                        .HasColumnType("integer");

                    b.Property<int>("NIdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UsuarioUnidade");
                });

            modelBuilder.Entity("MarketList_Model.AgrupadorListas", b =>
                {
                    b.HasOne("MarketList_Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("NIdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("NIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MarketList_Model.Item", b =>
                {
                    b.HasOne("MarketList_Model.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("NIdSessao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("NIdUnidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sessao");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("MarketList_Model.ItemLista", b =>
                {
                    b.HasOne("MarketList_Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("NIdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Lista", "Lista")
                        .WithMany()
                        .HasForeignKey("NIdLista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("NIdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Usuario", "UsuarioComprador")
                        .WithMany()
                        .HasForeignKey("NIdUsuarioComprador");

                    b.HasOne("MarketList_Model.Usuario", "UsuarioSolicitante")
                        .WithMany()
                        .HasForeignKey("NIdUsuarioSolicitante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Lista");

                    b.Navigation("Status");

                    b.Navigation("UsuarioComprador");

                    b.Navigation("UsuarioSolicitante");
                });

            modelBuilder.Entity("MarketList_Model.Lista", b =>
                {
                    b.HasOne("MarketList_Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("NIdUnidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("NIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MarketList_Model.ListaAgrupadorListas", b =>
                {
                    b.HasOne("MarketList_Model.AgrupadorListas", "AgrupadorListas")
                        .WithMany()
                        .HasForeignKey("NIdAgrupadorListas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Lista", "Lista")
                        .WithMany()
                        .HasForeignKey("NIdLista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgrupadorListas");

                    b.Navigation("Lista");
                });

            modelBuilder.Entity("MarketList_Model.Status", b =>
                {
                    b.HasOne("MarketList_Model.Area", "Area")
                        .WithMany()
                        .HasForeignKey("NIdArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("MarketList_Model.Usuario", b =>
                {
                    b.HasOne("MarketList_Model.PerfilUsuario", "PerfilUsuario")
                        .WithMany()
                        .HasForeignKey("NIdPerfilUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketList_Model.Status", "Status")
                        .WithMany()
                        .HasForeignKey("NIdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilUsuario");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
